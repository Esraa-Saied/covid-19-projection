import math
import pandas as pd
from matplotlib import pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Activation, Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.metrics import categorical_crossentropy
import numpy as np

from sklearn.preprocessing import MinMaxScaler


####


df = pd.read_csv('data.csv')
df= df.sample(frac=1)
train_set = df.iloc[:math.floor(80 / 100 * len(df))]
test_set = df.iloc[math.floor(80 / 100 * len(df)):]

scaler = MinMaxScaler()
scaler.fit(train_set)
train_set_scaled = scaler.transform(train_set)
test_set_scaled = scaler.transform(test_set)
model = Sequential([

    Dense(units=16, input_shape=(2,), activation='tanh'),
    Dense(units=32, activation='relu'),
    Dense(units=2, activation='softmax')])

from tensorflow.keras.optimizers import SGD
model.summary()
opt = SGD(lr=0.001)
model.compile(optimizer=opt, loss='sparse_categorical_crossentropy', metrics=['accuracy'])
history = model.fit(x=train_set_scaled[:, :2], y=train_set_scaled[:, 2:3],validation_split=0.2 , epochs=50, shuffle=True ,verbose=1)

his_dict = history.history

train_loss=his_dict['loss']
val_loss=his_dict['accuracy']
plt.plot(train_loss,label="train loss")
plt.plot(val_loss,label="val loss")
plt.legend()
plt.show()

model.save('COV19ClassificationModel.h5')

test_labels =  []
test_samples = []



test_labels = test_set_scaled[:, 2:3]
predictions = model.predict(
      x=test_set_scaled[:, :2]
    , batch_size=10
    , verbose=0
)
for i in predictions:
    print(i)
rounded_predictions = np.argmax(predictions, axis=-1).tolist()

print(rounded_predictions)
counter = 0
for i in range(len(rounded_predictions)):
    print(rounded_predictions[i] , ' >> ',test_labels[i])
    if (rounded_predictions[i] ==test_labels[i]):
        counter=counter+1
print(counter/len(rounded_predictions)*100)
